//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.LexikhumOatGateway
{
    [Serializable]
    public class DownstreamMsg : Message
    {
        public const string k_RosMessageName = "lexikhum_oat_gateway_msgs/Downstream";
        public override string RosMessageName => k_RosMessageName;

        // 
        //  LEXIKHUM-OAT Gateway
        // 
        //  This program is free software: you can redistribute it and/or modify
        //  it under the terms of the GNU General Public License as published by
        //  the Free Software Foundation, either version 3 of the License, or
        //  (at your option) any later version.
        // 
        //  This program is distributed in the hope that it will be useful,
        //  but WITHOUT ANY WARRANTY; without even the implied warranty of
        //  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        //  GNU General Public License for more details.
        // 
        //  You should have received a copy of the GNU General Public License
        //  along with this program; see the file COPYING.
        //  If not, see <http://www.gnu.org/licenses/>.
        // 
        // 
        //  uuid : unique message identifier (internal)
        // 
        public ulong uuid;
        // 
        //  ============================
        //      Datagram to discuss
        //  ============================
        // 
        //  entity_world_pose : position & orientation of the piloted entity in SI unit (meter, radian)
        // 
        public Geometry.PoseMsg entity_world_pose;
        // 
        //  param_gate_size_forward : parametized forward size zone of the haptic gate in SI unit (meter)
        // 
        public Geometry.Vector3Msg param_gate_size_forward;
        // 
        //  param_gate_size_dodge : parametized dodge size zone of the haptic gate in SI unit (meter)
        // 
        public Geometry.Vector3Msg param_gate_size_dodge;
        // 
        //  param_gate_gradiant_force : parametized gradiant of force applied by the haptic arm (N) ?
        // 
        public Geometry.Vector3Msg param_gate_gradiant_force;

        public DownstreamMsg()
        {
            this.uuid = 0;
            this.entity_world_pose = new Geometry.PoseMsg();
            this.param_gate_size_forward = new Geometry.Vector3Msg();
            this.param_gate_size_dodge = new Geometry.Vector3Msg();
            this.param_gate_gradiant_force = new Geometry.Vector3Msg();
        }

        public DownstreamMsg(ulong uuid, Geometry.PoseMsg entity_world_pose, Geometry.Vector3Msg param_gate_size_forward, Geometry.Vector3Msg param_gate_size_dodge, Geometry.Vector3Msg param_gate_gradiant_force)
        {
            this.uuid = uuid;
            this.entity_world_pose = entity_world_pose;
            this.param_gate_size_forward = param_gate_size_forward;
            this.param_gate_size_dodge = param_gate_size_dodge;
            this.param_gate_gradiant_force = param_gate_gradiant_force;
        }

        public static DownstreamMsg Deserialize(MessageDeserializer deserializer) => new DownstreamMsg(deserializer);

        private DownstreamMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.uuid);
            this.entity_world_pose = Geometry.PoseMsg.Deserialize(deserializer);
            this.param_gate_size_forward = Geometry.Vector3Msg.Deserialize(deserializer);
            this.param_gate_size_dodge = Geometry.Vector3Msg.Deserialize(deserializer);
            this.param_gate_gradiant_force = Geometry.Vector3Msg.Deserialize(deserializer);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.uuid);
            serializer.Write(this.entity_world_pose);
            serializer.Write(this.param_gate_size_forward);
            serializer.Write(this.param_gate_size_dodge);
            serializer.Write(this.param_gate_gradiant_force);
        }

        public override string ToString()
        {
            return "DownstreamMsg: " +
            "\nuuid: " + uuid.ToString() +
            "\nentity_world_pose: " + entity_world_pose.ToString() +
            "\nparam_gate_size_forward: " + param_gate_size_forward.ToString() +
            "\nparam_gate_size_dodge: " + param_gate_size_dodge.ToString() +
            "\nparam_gate_gradiant_force: " + param_gate_gradiant_force.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
